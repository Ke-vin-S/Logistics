version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - scms

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - scms

  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      kafka-topics --create --if-not-exists --topic orders.created --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 &&
      kafka-topics --create --if-not-exists --topic shipment.status.updated --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1
      "
    networks:
      - scms

  logistics-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: logistics-service
    ports:
      - "${LOGISTICS_SERVICE_PORT:-8002}:8000"
    environment:
      - DJANGO_PORT=8000
      - KAFKA_BROKER_URL=kafka:9092
    env_file: .env
    depends_on:
      - kafka
    networks:
      - scms

  kafka-consumer:
    container_name: kafka-consumer
    build:
      context: .
      dockerfile: Consumer.Dockerfile
    command: python manage.py consume_orders
    environment:
      - KAFKA_BROKER_URL=kafka:9092
    depends_on:
      - kafka-init
      - kafka
    env_file: .env
    networks:
      - scms

networks:
  scms:
    external: true
    name: scms-network